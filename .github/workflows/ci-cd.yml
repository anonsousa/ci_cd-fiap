name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build project
        run: ./mvnw clean package -DskipTests

      - name: Docker build
        run: docker build -t api-coleta-residuos:${{ github.sha }} .

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker push
        run: docker push api-coleta-residuos:${{ github.sha }}

  deploy_staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'

    steps:
      - name: Deploy to Staging
        run: echo "Deploying to staging environment"
        # Aqui pode ter comandos para puxar a imagem Docker e fazer deploy no ambiente de staging

  deploy_production:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to Production
        run: echo "Deploying to production environment"
        # Aqui pode ter comandos para puxar a imagem Docker e fazer deploy no ambiente de produção
